/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ants;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.MouseEvent;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author user
 */
public class MainWindow extends javax.swing.JFrame {
    
    /**
     * Creates new form NewJFrame
     */
    public MainWindow() {
        initComponents();
    }
    private int pressedX = 0;
    private int pressedY = 0;
    private boolean mousePressed = false;
    private City selectedCity = null; 
    private boolean moveCity = false;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        resultPanel = new javax.swing.JPanel();
        infoPanel = new javax.swing.JPanel();
        nameCaptionLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        cityCountCaptionLabel = new javax.swing.JLabel();
        cityCountLabel = new javax.swing.JLabel();
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        commentCaptionLabel = new javax.swing.JLabel();
        commentLabel = new javax.swing.JLabel();
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        timeCaptionLabel = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        scorePanel = new javax.swing.JPanel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        bestRouteCaptionLabel = new javax.swing.JLabel();
        averageRouteCaptionLabel = new javax.swing.JLabel();
        globalCaptionLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        localCaptionLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        progressPanel = new javax.swing.JPanel();
        progressBar = new javax.swing.JProgressBar();
        startButton = new javax.swing.JButton();
        paintPanel = new ants.PaintPanel();
        viewPanel = new javax.swing.JPanel();
        autoscaleSwitch = new javax.swing.JToggleButton();
        zoomSlider = new javax.swing.JSlider();
        zoomLabel = new javax.swing.JLabel();
        zoomLabel2 = new javax.swing.JLabel();
        thicknessSlider = new javax.swing.JSlider();
        thicknessLabel = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        parameterPanel = new javax.swing.JPanel();
        pheromonLabel = new javax.swing.JLabel();
        localInformationLabel = new javax.swing.JLabel();
        evaporationLabel = new javax.swing.JLabel();
        evaporationSlider = new javax.swing.JSlider();
        initialPheromonLabel = new javax.swing.JLabel();
        pheromonUpdateLabel = new javax.swing.JLabel();
        evaporationText = new javax.swing.JTextField();
        pheromonText = new javax.swing.JTextField();
        localInformationText = new javax.swing.JTextField();
        initialPheromonText = new javax.swing.JTextField();
        pheromonUpdateText = new javax.swing.JTextField();
        pheromonSlider = new javax.swing.JSlider();
        localInformationSlider = new javax.swing.JSlider();
        initialPheromonSlider = new javax.swing.JSlider();
        pheromonUpdateSlider = new javax.swing.JSlider();
        iterationPanel = new javax.swing.JPanel();
        iterationCaptionLabel = new javax.swing.JLabel();
        antsCaptionLabel = new javax.swing.JLabel();
        iterationsText = new javax.swing.JTextField();
        antsText = new javax.swing.JTextField();
        stopPanel = new javax.swing.JPanel();
        mainMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        loadMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ant Colony Optimization");
        setName("MainFrame"); // NOI18N

        resultPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Ergebnisse:"));

        infoPanel.setLayout(new java.awt.GridLayout(0, 3));

        nameCaptionLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        nameCaptionLabel.setText("Name:");
        nameCaptionLabel.setToolTipText("");
        nameCaptionLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        infoPanel.add(nameCaptionLabel);

        nameLabel.setText("Berlin52");
        nameLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        infoPanel.add(nameLabel);
        infoPanel.add(filler4);

        cityCountCaptionLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cityCountCaptionLabel.setText("Anzahl der Städte:");
        cityCountCaptionLabel.setMaximumSize(new java.awt.Dimension(100, 14));
        infoPanel.add(cityCountCaptionLabel);

        cityCountLabel.setText("52");
        infoPanel.add(cityCountLabel);
        infoPanel.add(filler5);

        commentCaptionLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        commentCaptionLabel.setText("Kommentar:");
        infoPanel.add(commentCaptionLabel);

        commentLabel.setText("blab lbalbalblabla");
        infoPanel.add(commentLabel);
        infoPanel.add(filler6);

        timeCaptionLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        timeCaptionLabel.setText("benötigte Zeit:");
        infoPanel.add(timeCaptionLabel);

        timeLabel.setText("5 s");
        infoPanel.add(timeLabel);

        scorePanel.setPreferredSize(new java.awt.Dimension(2484, 30));
        scorePanel.setLayout(new java.awt.GridLayout(0, 3, 0, 2));
        scorePanel.add(filler1);

        bestRouteCaptionLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bestRouteCaptionLabel.setText("Beste Route:");
        scorePanel.add(bestRouteCaptionLabel);

        averageRouteCaptionLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        averageRouteCaptionLabel.setText("Durchschnittliche Route:");
        scorePanel.add(averageRouteCaptionLabel);

        globalCaptionLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        globalCaptionLabel.setText("Gesamt:");
        scorePanel.add(globalCaptionLabel);

        jLabel6.setText("16000 km");
        scorePanel.add(jLabel6);

        jLabel10.setText("16000 km");
        scorePanel.add(jLabel10);

        localCaptionLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        localCaptionLabel.setText("Iteration:");
        localCaptionLabel.setToolTipText("");
        localCaptionLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        scorePanel.add(localCaptionLabel);

        jLabel1.setText("18000 km");
        scorePanel.add(jLabel1);

        jLabel2.setText("20000 km");
        scorePanel.add(jLabel2);

        javax.swing.GroupLayout resultPanelLayout = new javax.swing.GroupLayout(resultPanel);
        resultPanel.setLayout(resultPanelLayout);
        resultPanelLayout.setHorizontalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(scorePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(infoPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        resultPanelLayout.setVerticalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultPanelLayout.createSequentialGroup()
                .addComponent(infoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scorePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        progressBar.setValue(35);
        progressBar.setStringPainted(true);

        javax.swing.GroupLayout progressPanelLayout = new javax.swing.GroupLayout(progressPanel);
        progressPanel.setLayout(progressPanelLayout);
        progressPanelLayout.setHorizontalGroup(
            progressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(progressPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        progressPanelLayout.setVerticalGroup(
            progressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(progressPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        startButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        paintPanel.setBackground(new java.awt.Color(255, 255, 255));
        paintPanel.setAutoscale(false);
        paintPanel.setMaximumSize(new java.awt.Dimension(500, 300));
        paintPanel.setPreferredSize(new java.awt.Dimension(500, 300));
        paintPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paintPanelMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                paintPanelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                paintPanelMouseReleased(evt);
            }
        });
        paintPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                paintPanelMouseDragged(evt);
            }
        });
        paintPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                paintPanelComponentResized(evt);
            }
        });

        javax.swing.GroupLayout paintPanelLayout = new javax.swing.GroupLayout(paintPanel);
        paintPanel.setLayout(paintPanelLayout);
        paintPanelLayout.setHorizontalGroup(
            paintPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        paintPanelLayout.setVerticalGroup(
            paintPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        viewPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Ansicht"));

        autoscaleSwitch.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        autoscaleSwitch.setSelected(true);
        autoscaleSwitch.setText("Autoskalierung");
        autoscaleSwitch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoscaleChanged(evt);
            }
        });

        zoomSlider.setMajorTickSpacing(10);
        zoomSlider.setMaximum(1000);
        zoomSlider.setMinimum(10);
        zoomSlider.setMinorTickSpacing(10);
        zoomSlider.setSnapToTicks(true);
        zoomSlider.setValue(100);
        zoomSlider.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        zoomSlider.setFocusable(false);
        zoomSlider.setValueIsAdjusting(true);
        zoomSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                zoomChangedHandler(evt);
            }
        });

        zoomLabel.setText("Zoom:");
        zoomLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                zoomLabelMouseClicked(evt);
            }
        });

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, zoomSlider, org.jdesktop.beansbinding.ELProperty.create("${value}"), zoomLabel2, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        thicknessSlider.setMajorTickSpacing(2);
        thicknessSlider.setMaximum(14);
        thicknessSlider.setMinimum(2);
        thicknessSlider.setMinorTickSpacing(2);
        thicknessSlider.setToolTipText("");
        thicknessSlider.setValue(8);
        thicknessSlider.setValueIsAdjusting(true);
        thicknessSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ThicknessChanged(evt);
            }
        });

        thicknessLabel.setText("Stadtgröße:");

        javax.swing.GroupLayout viewPanelLayout = new javax.swing.GroupLayout(viewPanel);
        viewPanel.setLayout(viewPanelLayout);
        viewPanelLayout.setHorizontalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(zoomSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(autoscaleSwitch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(viewPanelLayout.createSequentialGroup()
                        .addComponent(zoomLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(zoomLabel2))
                    .addComponent(thicknessSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(viewPanelLayout.createSequentialGroup()
                        .addComponent(thicknessLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        viewPanelLayout.setVerticalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(autoscaleSwitch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zoomLabel)
                    .addComponent(zoomLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(zoomSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(thicknessLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(thicknessSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pheromonLabel.setText("Pheromon:");

        localInformationLabel.setText("lokale Information");

        evaporationLabel.setText("Verdunstunsfaktor:");

        evaporationSlider.setMaximum(10001);
        evaporationSlider.setMinimum(1);
        evaporationSlider.setMinorTickSpacing(1);
        evaporationSlider.setToolTipText("");
        evaporationSlider.setValue(1000);

        initialPheromonLabel.setText("initiale Pheromone:");

        pheromonUpdateLabel.setText("Pheromon-Update:");

        evaporationText.setInputVerifier(new DoubleInputVerifier(0,1));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, evaporationSlider, org.jdesktop.beansbinding.ELProperty.create("${value}"), evaporationText, org.jdesktop.beansbinding.BeanProperty.create("text"), "evaporationBinding");
        binding.setConverter(new DoubleConverter());
        bindingGroup.addBinding(binding);

        pheromonText.setInputVerifier(new DoubleInputVerifier(0));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, pheromonSlider, org.jdesktop.beansbinding.ELProperty.create("${value}"), pheromonText, org.jdesktop.beansbinding.BeanProperty.create("text"), "pheromonBinding");
        binding.setConverter(new DoubleConverter());
        bindingGroup.addBinding(binding);

        localInformationText.setInputVerifier(new DoubleInputVerifier(0));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, localInformationSlider, org.jdesktop.beansbinding.ELProperty.create("${value}"), localInformationText, org.jdesktop.beansbinding.BeanProperty.create("text"), "localInformationBinding");
        binding.setConverter(new DoubleConverter());
        bindingGroup.addBinding(binding);

        initialPheromonText.setInputVerifier(new DoubleInputVerifier(0));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, initialPheromonSlider, org.jdesktop.beansbinding.ELProperty.create("${value}"), initialPheromonText, org.jdesktop.beansbinding.BeanProperty.create("text"), "initialPheromonBinding");
        binding.setConverter(new DoubleConverter());
        bindingGroup.addBinding(binding);

        pheromonUpdateText.setInputVerifier(new DoubleInputVerifier(0));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, pheromonUpdateSlider, org.jdesktop.beansbinding.ELProperty.create("${value}"), pheromonUpdateText, org.jdesktop.beansbinding.BeanProperty.create("text"), "pheromonUpdateBinding");
        binding.setConverter(new DoubleConverter());
        bindingGroup.addBinding(binding);

        pheromonSlider.setMaximum(100000);
        pheromonSlider.setValue(50000);

        localInformationSlider.setMaximum(100000);
        localInformationSlider.setValue(50000);

        initialPheromonSlider.setMaximum(100000);
        initialPheromonSlider.setValue(50000);

        pheromonUpdateSlider.setMaximum(100000);
        pheromonUpdateSlider.setValue(50000);

        javax.swing.GroupLayout parameterPanelLayout = new javax.swing.GroupLayout(parameterPanel);
        parameterPanel.setLayout(parameterPanelLayout);
        parameterPanelLayout.setHorizontalGroup(
            parameterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parameterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(parameterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(initialPheromonSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                    .addComponent(pheromonUpdateSlider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(pheromonSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, parameterPanelLayout.createSequentialGroup()
                        .addGroup(parameterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pheromonLabel)
                            .addComponent(localInformationLabel)
                            .addComponent(evaporationLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(parameterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(evaporationText)
                            .addComponent(pheromonText, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                            .addComponent(localInformationText)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, parameterPanelLayout.createSequentialGroup()
                        .addGroup(parameterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(initialPheromonLabel)
                            .addComponent(pheromonUpdateLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(parameterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pheromonUpdateText, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                            .addComponent(initialPheromonText)))
                    .addComponent(localInformationSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(evaporationSlider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        parameterPanelLayout.setVerticalGroup(
            parameterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parameterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(parameterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pheromonLabel)
                    .addComponent(pheromonText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pheromonSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(parameterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(localInformationLabel)
                    .addComponent(localInformationText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(localInformationSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(parameterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(evaporationLabel)
                    .addComponent(evaporationText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(evaporationSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(parameterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(initialPheromonLabel)
                    .addComponent(initialPheromonText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(initialPheromonSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(parameterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pheromonUpdateLabel)
                    .addComponent(pheromonUpdateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pheromonUpdateSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(140, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Parameter", parameterPanel);

        iterationCaptionLabel.setText("Anzahl der Iterationen:");

        antsCaptionLabel.setText("Anzahl der Ameisen:");

        iterationsText.setText("100");
        iterationsText.setInputVerifier(new IntegerInputVerifier());

        antsText.setText("100");
        antsText.setInputVerifier(new IntegerInputVerifier());

        javax.swing.GroupLayout iterationPanelLayout = new javax.swing.GroupLayout(iterationPanel);
        iterationPanel.setLayout(iterationPanelLayout);
        iterationPanelLayout.setHorizontalGroup(
            iterationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(iterationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(iterationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iterationCaptionLabel)
                    .addComponent(antsCaptionLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(iterationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(antsText, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                    .addComponent(iterationsText))
                .addContainerGap())
        );
        iterationPanelLayout.setVerticalGroup(
            iterationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(iterationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(iterationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(iterationCaptionLabel)
                    .addComponent(iterationsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(iterationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(antsCaptionLabel)
                    .addComponent(antsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(359, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Iterationen", iterationPanel);

        javax.swing.GroupLayout stopPanelLayout = new javax.swing.GroupLayout(stopPanel);
        stopPanel.setLayout(stopPanelLayout);
        stopPanelLayout.setHorizontalGroup(
            stopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 237, Short.MAX_VALUE)
        );
        stopPanelLayout.setVerticalGroup(
            stopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 416, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Abbruch", stopPanel);

        fileMenu.setText("Datei");

        newMenuItem.setText("Neu");
        newMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(newMenuItem);

        saveMenuItem.setText("Speichern");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveMenuItem);

        loadMenuItem.setText("Laden...");
        loadMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(loadMenuItem);

        exitMenuItem.setText("Beenden");
        fileMenu.add(exitMenuItem);

        mainMenuBar.add(fileMenu);

        setJMenuBar(mainMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(progressPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(resultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(paintPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
                        .addGap(0, 21, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTabbedPane1)
                    .addComponent(viewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(startButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(paintPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(viewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(progressPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadMenuItemActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("TSP Laden");
        chooser.setCurrentDirectory(new File(System.getProperty("user.dir")));
        chooser.setFileFilter(new FileNameExtensionFilter("TSP-Datei", "tsp"));
        chooser.showOpenDialog(this);
        if (chooser.getSelectedFile() != null) {
            TSP.loadFromFile(chooser.getSelectedFile().getPath());
            refreshTSPInfos();
        }
        
        paintPanel.setSize(paintPanel.getHeight(), this.getWidth()-250);
    }//GEN-LAST:event_loadMenuItemActionPerformed

    
    private void paintPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paintPanelMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) { // LEFT CLICK
            Main.data.addCity(paintPanel.XPixel2Coord(evt.getX()), paintPanel.YPixel2Coord(evt.getY()));
            paintPanel.refresh();
        }
        if (evt.getButton() == MouseEvent.BUTTON3) { // RIGHT CLICK
            City nearestCity = Main.data.getCityNearby(paintPanel.XPixel2Coord(evt.getX()), paintPanel.YPixel2Coord(evt.getY()),paintPanel.getThickness() / paintPanel.getRelation(),paintPanel.getThickness() / paintPanel.getRelation());
            if (nearestCity != null) {
                if (selectedCity != null) {
                    selectedCity.setColor(Color.BLACK);

                }
                if (selectedCity == nearestCity) {
                    selectedCity = null;
                    paintPanel.refresh();
                } else {
                    nearestCity.setColor(Color.red);
                    selectedCity = nearestCity;
                    paintPanel.refresh();
                }

            } else {
                selectedCity.setColor(Color.BLACK);
                selectedCity = null;
                paintPanel.refresh();
            }
        }
       
            
        refreshTSPInfos();
    }//GEN-LAST:event_paintPanelMouseClicked

    private void newMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMenuItemActionPerformed

        autoscaleSwitch.setSelected(false);
        paintPanel.setAutoscale(false);
        zoomSlider.setValue(100);
        paintPanel.resetOffset();
        Main.data = new TSP();
        paintPanel.refresh();
        refreshTSPInfos();
    }//GEN-LAST:event_newMenuItemActionPerformed

    private void paintPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paintPanelMousePressed
        if (evt.getButton() == MouseEvent.BUTTON3) {
            if (selectedCity != null) {
                City nearestCity = Main.data.getCityNearby(paintPanel.XPixel2Coord(evt.getX()), paintPanel.YPixel2Coord(evt.getY()), 10 / paintPanel.getRelation(), 10 / paintPanel.getRelation());
                if (nearestCity == selectedCity) {
                    moveCity = true;
                }
            }
        }
        if (evt.getButton() == MouseEvent.BUTTON1) {
            if (!autoscaleSwitch.isSelected()) {
                mousePressed = true;
                pressedX = evt.getX();
                pressedY = evt.getY();
            }
        }
        
        
    }//GEN-LAST:event_paintPanelMousePressed

    private void paintPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paintPanelMouseReleased
        mousePressed = false;
        moveCity = false;
        paintPanel.setCursor( new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_paintPanelMouseReleased

    private void paintPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paintPanelMouseDragged
        if (moveCity) {
            selectedCity.moveCity( paintPanel.XPixel2Coord(evt.getX()), paintPanel.YPixel2Coord(evt.getY()));
            paintPanel.refresh();
        }
        
        if (mousePressed) {
            paintPanel.setCursor( new Cursor(Cursor.HAND_CURSOR));
            paintPanel.shiftX(pressedX - evt.getX());
            paintPanel.shiftY(pressedY - evt.getY());
            pressedX = evt.getX();
            pressedY = evt.getY();
            paintPanel.refresh();
        }
    }//GEN-LAST:event_paintPanelMouseDragged

    private void ThicknessChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ThicknessChanged
        paintPanel.setThickness(thicknessSlider.getValue());
        paintPanel.refresh();
    }//GEN-LAST:event_ThicknessChanged

    private void zoomChangedHandler(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_zoomChangedHandler
        paintPanel.setZoom(zoomSlider.getValue());
        paintPanel.refresh();
    }//GEN-LAST:event_zoomChangedHandler

    private void autoscaleChanged(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoscaleChanged
        paintPanel.setAutoscale(autoscaleSwitch.isSelected());
        if (!autoscaleSwitch.isSelected()) {
            paintPanel.setBestOffset();
        }
        paintPanel.refresh();
    }//GEN-LAST:event_autoscaleChanged

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        try {
            Main.data.setPheromon(Double.parseDouble(pheromonText.getText()));
            Main.data.setLocalInformation(Double.parseDouble(localInformationText.getText()));
            Main.data.setEvaporation(Double.parseDouble(evaporationText.getText()));
            Main.data.setInitialPheromon(Double.parseDouble(initialPheromonText.getText()));
            Main.data.setPheromonUpdate(Double.parseDouble(pheromonUpdateText.getText()));
            Main.data.setIterations(Integer.parseInt(iterationsText.getText()));
            Main.data.setAnts(Integer.parseInt(antsText.getText()));
            Main.data.solveTSP();
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Fehlerhafter Parameter:\n" + e.getMessage(), "Fehlerhafter Parameter", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_startButtonActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("TSP-Speicherm");
        chooser.setCurrentDirectory(new File(System.getProperty("user.dir")));
        if (Main.data.getName() != null) {
            chooser.setSelectedFile(new File(System.getProperty("user.dir") + "/" + Main.data.getName() + ".tsp"));
        } else {
            chooser.setSelectedFile(new File(System.getProperty("user.dir") + "/Neu.tsp"));    
        }     
        chooser.setFileFilter(new FileNameExtensionFilter("TSP-Datei", "tsp"));
        chooser.showSaveDialog(this);
        if (chooser.getSelectedFile() != null) {
            Main.data.saveToFile(chooser.getSelectedFile());
            refreshTSPInfos();
        }
        
    }//GEN-LAST:event_saveMenuItemActionPerformed

    private void zoomLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_zoomLabelMouseClicked
        zoomSlider.setValue(100);
    }//GEN-LAST:event_zoomLabelMouseClicked

    private void paintPanelComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_paintPanelComponentResized
        System.out.println(evt.getSource());
    }//GEN-LAST:event_paintPanelComponentResized

    private void refreshTSPInfos() {
        this.nameLabel.setText(Main.data.getName());
        this.commentLabel.setText(Main.data.getComment());
        this.cityCountLabel.setText(Main.data.getCityListLength() + "");
    }
    
    public int getZoom() {
        return zoomSlider.getValue();
    }

    public boolean getAutoscale() {
        return autoscaleSwitch.isSelected();
    }
    /** 
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            @Override
//            public void run() {
//                new MainWindow().setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel antsCaptionLabel;
    private javax.swing.JTextField antsText;
    private javax.swing.JToggleButton autoscaleSwitch;
    private javax.swing.JLabel averageRouteCaptionLabel;
    private javax.swing.JLabel bestRouteCaptionLabel;
    private javax.swing.JLabel cityCountCaptionLabel;
    private javax.swing.JLabel cityCountLabel;
    private javax.swing.JLabel commentCaptionLabel;
    private javax.swing.JLabel commentLabel;
    private javax.swing.JLabel evaporationLabel;
    private javax.swing.JSlider evaporationSlider;
    private javax.swing.JTextField evaporationText;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.Box.Filler filler6;
    private javax.swing.JLabel globalCaptionLabel;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JLabel initialPheromonLabel;
    private javax.swing.JSlider initialPheromonSlider;
    private javax.swing.JTextField initialPheromonText;
    private javax.swing.JLabel iterationCaptionLabel;
    private javax.swing.JPanel iterationPanel;
    private javax.swing.JTextField iterationsText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JMenuItem loadMenuItem;
    private javax.swing.JLabel localCaptionLabel;
    private javax.swing.JLabel localInformationLabel;
    private javax.swing.JSlider localInformationSlider;
    private javax.swing.JTextField localInformationText;
    private javax.swing.JMenuBar mainMenuBar;
    private javax.swing.JLabel nameCaptionLabel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JMenuItem newMenuItem;
    private ants.PaintPanel paintPanel;
    private javax.swing.JPanel parameterPanel;
    private javax.swing.JLabel pheromonLabel;
    private javax.swing.JSlider pheromonSlider;
    private javax.swing.JTextField pheromonText;
    private javax.swing.JLabel pheromonUpdateLabel;
    private javax.swing.JSlider pheromonUpdateSlider;
    private javax.swing.JTextField pheromonUpdateText;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JPanel progressPanel;
    private javax.swing.JPanel resultPanel;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JPanel scorePanel;
    private javax.swing.JButton startButton;
    private javax.swing.JPanel stopPanel;
    private javax.swing.JLabel thicknessLabel;
    private javax.swing.JSlider thicknessSlider;
    private javax.swing.JLabel timeCaptionLabel;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JPanel viewPanel;
    private javax.swing.JLabel zoomLabel;
    private javax.swing.JLabel zoomLabel2;
    private javax.swing.JSlider zoomSlider;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
